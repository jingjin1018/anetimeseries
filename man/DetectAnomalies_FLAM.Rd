% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DetectAnomalies_FLAM.R
\name{DetectAnomalies_FLAM}
\alias{DetectAnomalies_FLAM}
\title{Anomalies and Change Points Detection using FLAM}
\usage{
DetectAnomalies_FLAM(data, period, time = NULL, max_anoms = 0.03,
  direction = "both", ...)
}
\arguments{
\item{data}{A numeric vector containing values observed at times specified in
\code{time}.}

\item{period}{A numeric value indicating the number of observations in a
single period, and used during seasonal decomposition.}

\item{time}{A corresponding vector specifying times/dates. If this parameter
is missing, it will be set as starting from "1990-01-01".}

\item{max_anoms}{Maximum number of anomalies will be detected as a percentage
of the \code{data}}

\item{direction}{Directionality of the anomalies to be deteted. Options are:
\emph{'pos'}, \emph{'neg'} and \emph{'both'}. Defaults to be \emph{'both'}}
}
\description{
A technique for detecting both past and current anomalies in an
  univariate time series given all observations up to and including the
  current time. \cr \cr The algorithm used in this function is as follows:
  \enumerate{\item Create a time series object using \code{data},
  \code{frequency} and \code{time}. \item Decompose the time series into
  three components using STL, i.e. seasonal, trend and residual. \item Fit
  the trend component using Fused Lasso Additive Model (FLAM), where it is
  estimated to piecewise constant with a small number of adaptively-chosen
  knots. \item According to the change point detected in last step, split the
  original time series into non-overlapping windows of varying size. \item If
  the window size is large than 2 periods, detect anomalies within the window
  by applying the \code{\link[AnomalyDetection]{AnomalyDetectionVec}}
  function provided by twitter. Otherwise, mark all the observations that
  deviate from the median by more than 2.58 Median Absolute Deviation (MAD)
  as anomalies.}
}
\examples{
data <- SessionSuccessRate
p1 <- PlotTimeSeries(data, "Day", c("Value"))
anomalies <- DetectAnomalies_FLAM(data$Value, 7, time = data$Day)
p1 <- AddShadedRegion(p1, c(1:dim(data)[1]) \%in\% anomalies$change.points, color = "red")
p1 <- AddShadedRegion(p1, c(1:dim(data)[1]) \%in\% anomalies$anomaly.points, color = "blue")
p1

}
\seealso{
\code{\link[stats]{stl}} \code{\link[flam]{flamCV}}
  \code{\link[AnomalyDetection]{AnomalyDetectionVec}}
}
